REST constraints:
	Uniform interface
	Client Server separtion 
	Stateless : State is transfered in request/response
	Layered System : Clinet -> Outer layer
	Cacheable
	Code on demand (optional)

URI:
	noun/id/noun/id, noun = plural

Error Codes return
	200
	400
	500

Creating Controller
	Inherit from ControllerBase, add [ApiController] attribute
Getting Resource 
	Use ActionResult<T>
	Seperate repo and dto (model)
	Use automapper

	Parent/Child relation
		create child request to course based on author 

	Handling fault
		Exception handling defined in the pipeline by creating termination middlware (addExceptionHandler)
		Supporting HttpHead

	Searching Filtering
		Done by using querystring
		Parameters binding, by default it using the parameter datatype and its matching uri
		ComplexType (class) be default it's [FormBody]

Creating Resource
	Dto object must be created for each operation


